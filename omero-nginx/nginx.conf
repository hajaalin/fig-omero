# 
# nginx userland template
# this configuration is designed for running nginx as the omero user or similar
# nginx -c etc/nginx.conf
# for inclusion in a system-wide nginx configuration see omero web config nginx --system
#
pid /var/pid.nginx;
error_log /var/log/nginx_error.log;
worker_processes  5;
working_directory /var;

events {
    worker_connections  1024;
}


http {
    access_log    /var/log/nginx_access.log;
    include       /opt/omero/etc/mime.types;
    default_type  application/octet-stream;
    client_body_temp_path /var/nginx_tmp;
    
    sendfile on;
    send_timeout 60s;
    client_max_body_size 0;

    keepalive_timeout  65;

    server {
        listen       8080;
        server_name  _;
        fastcgi_temp_path /var/nginx_tmp;
        proxy_temp_path /var/nginx_tmp;

         # weblitz django apps serve static content from here
        location /static {
            alias /opt/omero/lib/python/omeroweb/static;
        }

        location / {
            if (-f /var/maintenance.html) {
               error_page 503 /maintenance.html;
               return 503;
            }

	    # NOTE: "omeroweb" is the name of the service defined in fig.yml
            fastcgi_pass omeroweb:4080;

            fastcgi_param PATH_INFO $fastcgi_script_name;


            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_param CONTENT_TYPE $content_type;
            fastcgi_param CONTENT_LENGTH $content_length;
            fastcgi_param SERVER_NAME $server_name;
            fastcgi_param SERVER_PROTOCOL $server_protocol;
            fastcgi_param SERVER_PORT $server_port;
            fastcgi_pass_header Authorization;
            fastcgi_intercept_errors on;
            fastcgi_read_timeout 60;
            # Uncomment if nginx SSL module is enabled or you are using nginx 1.1.11 or later
            # -- See: #10273, http://nginx.org/en/CHANGES
            # fastcgi_param HTTPS $https;
        }

        location /maintenance.html {
            root /var;
        }

    }

}


